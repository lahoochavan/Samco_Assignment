import java.io.File;
import java.io.FileNotFoundException;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class ResumeAnalyzer {

    public static void main(String[] args) {
        String fileName = "resume.txt"; // Replace with your resume file path
        String content = readFile(fileName);

        if (content != null) {
            analyzeContent(content);
        }
    }

    // Method to read file content
    private static String readFile(String fileName) {
        StringBuilder content = new StringBuilder();
        try {
            Scanner scanner = new Scanner(new File(fileName));
            while (scanner.hasNextLine()) {
                content.append(scanner.nextLine()).append(" ");
            }
            scanner.close();
        } catch (FileNotFoundException e) {
            System.out.println("File not found: " + fileName);
            return null;
        }
        return content.toString();
    }

    // Method to analyze content and print required statistics
    private static void analyzeContent(String content) {
        content = content.toLowerCase(); // Convert content to lowercase for case-insensitive analysis

        // Count occurrences of each alphabet and word
        Map<Character, Integer> alphabetCount = new HashMap<>();
        Map<String, Integer> wordCount = new HashMap<>();
        int[] numberCount = new int[10]; // To count occurrences of numbers 0-9

        String[] words = content.split("\\W+");
        for (String word : words) {
            wordCount.put(word, wordCount.getOrDefault(word, 0) + 1);
        }

        for (char c : content.toCharArray()) {
            if (Character.isAlphabetic(c)) {
                alphabetCount.put(c, alphabetCount.getOrDefault(c, 0) + 1);
            } else if (Character.isDigit(c)) {
                numberCount[c - '0']++;
            }
        }

        // Find max and min used alphabet
        char maxUsedAlphabet = ' ';
        char minUsedAlphabet = ' ';
        int maxAlphabetCount = Integer.MIN_VALUE;
        int minAlphabetCount = Integer.MAX_VALUE;

        for (Map.Entry<Character, Integer> entry : alphabetCount.entrySet()) {
            if (entry.getValue() > maxAlphabetCount) {
                maxUsedAlphabet = entry.getKey();
                maxAlphabetCount = entry.getValue();
            }
            if (entry.getValue() < minAlphabetCount) {
                minUsedAlphabet = entry.getKey();
                minAlphabetCount = entry.getValue();
            }
        }

        // Find max and min used number
        int maxUsedNumber = -1;
        int minUsedNumber = -1;
        int maxNumberCount = Integer.MIN_VALUE;
        int minNumberCount = Integer.MAX_VALUE;

        for (int i = 0; i < numberCount.length; i++) {
            if (numberCount[i] > maxNumberCount) {
                maxUsedNumber = i;
                maxNumberCount = numberCount[i];
            }
            if (numberCount[i] < minNumberCount) {
                minUsedNumber = i;
                minNumberCount = numberCount[i];
            }
        }

        // Find max, 2nd max, min, and 2nd min used words
        String maxUsedWord = "";
        String secondMaxUsedWord = "";
        String minUsedWord = "";
        String secondMinUsedWord = "";
        int maxWordCount = Integer.MIN_VALUE;
        int secondMaxWordCount = Integer.MIN_VALUE;
        int minWordCount = Integer.MAX_VALUE;
        int secondMinWordCount = Integer.MAX_VALUE;

        for (Map.Entry<String, Integer> entry : wordCount.entrySet()) {
            int count = entry.getValue();
            String word = entry.getKey();

            if (count > maxWordCount) {
                secondMaxWordCount = maxWordCount;
                secondMaxUsedWord = maxUsedWord;
                maxWordCount = count;
                maxUsedWord = word;
            } else if (count > secondMaxWordCount) {
                secondMaxWordCount = count;
                secondMaxUsedWord = word;
            }

            if (count < minWordCount) {
                secondMinWordCount = minWordCount;
                secondMinUsedWord = minUsedWord;
                minWordCount = count;
                minUsedWord = word;
            } else if (count < secondMinWordCount) {
                secondMinWordCount = count;
                secondMinUsedWord = word;
            }
        }

        // Print the results
        System.out.println("Max User Alphabet: " + maxUsedAlphabet);
        System.out.println("Max User Number: " + maxUsedNumber);
        System.out.println("Min Used Alphabet: " + minUsedAlphabet);
        System.out.println("Min Used Number: " + minUsedNumber);
        System.out.println("Max Used Word: " + maxUsedWord);
        System.out.println("2nd Max Used Word: " + secondMaxUsedWord);
        System.out.println("Min Used Word: " + minUsedWord);
        System.out.println("2nd Min Used Word: " + secondMinUsedWord);
    }
}



Output:




